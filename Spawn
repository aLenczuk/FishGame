# FishGame

import java.util.Random;


public class Spawn {

    private Handler handler;
    private HUD hud;
    private Random r= new Random();

    private int scoreKeep = 0;

    public Spawn(Handler handler, HUD hud) {
        this.handler = handler;
        this.hud = hud;
    }

    public void tick() {

        scoreKeep++;

        if (scoreKeep >= 250) {
            scoreKeep = 0;
            hud.setLevel(hud.getLevel() + 1);


            if (hud.getLevel() == 2) {
                for (int i = 0; i < 3; i++) {
                    handler.addObject(new Food(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.Food, handler));
                }
                handler.addObject(new SmallFish(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.SmallFish, handler));
            }
            else if(hud.getLevel()==3){
                for (int i = 0; i < 3; i++) {
                    handler.addObject(new Food(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.Food, handler));
                    handler.addObject(new SmallFish(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.SmallFish, handler));
                }
                handler.addObject(new BasicEnemy(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.BasicEnemy, handler));
            }
            else if(hud.getLevel()==4){
                for(int i=0; i<3; i++){
                    handler.addObject(new Food(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.Food, handler));
                    handler.addObject(new SmallFish(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.SmallFish, handler));
                }
                handler.addObject(new BasicEnemy(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.BasicEnemy, handler));
            }
            else if(hud.getLevel()==5){
                for(int i=0; i<3; i++){
                    handler.addObject(new Food(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.Food, handler));
                    handler.addObject(new SmallFish(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.SmallFish, handler));
                }
                handler.addObject(new BasicEnemy(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.BasicEnemy, handler));
            }
            else if(hud.getLevel()==6 || hud.getLevel()==7 || hud.getLevel()==8 || hud.getLevel()==9 || hud.getLevel()==11){
                for(int i=0; i<3; i++){
                    handler.addObject(new Food(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.Food, handler));
                    handler.addObject(new SmallFish(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.SmallFish, handler));
                }
            }
            else if(hud.getLevel()==10){
                for(int i=0; i<3; i++){
                    handler.addObject(new Food(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.Food, handler));
                    handler.addObject(new SmallFish(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.SmallFish, handler));
                }
                handler.addObject(new BigFish(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.BigFish, handler));
            }
            else if(hud.getLevel()==12){
                for(int i=0; i<3; i++){
                    handler.addObject(new Food(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.Food, handler));
                    handler.addObject(new SmallFish(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.SmallFish, handler));
                }
                handler.addObject(new BasicEnemy(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.BasicEnemy, handler));
            }
        }

    }
}
